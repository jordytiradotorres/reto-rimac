@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin respond-to($breakpoint) {
  @if $breakpoint == "phone" {
    @media (min-width: 600px) {
      @content;
    }
  } @else if $breakpoint == "tablet" {
    @media (min-width: 900px) {
      @content;
    }
  } @else if $breakpoint == "desktop" {
    @media (min-width: 1200px) {
      @content;
    }
  } @else {
    @media (min-width: $breakpoint) {
      @content;
    }
  }
}

@mixin text-truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin button-reset {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;
  font: inherit;
}

@mixin button-primary($bg-color, $text-color) {
  @include button-reset;
  background-color: $bg-color;
  color: $text-color;
  padding: 0.75rem 1.5rem;
  border-radius: 4px;
  transition: background-color 0.3s;

  &:hover {
    background-color: darken($bg-color, 10%);
  }
}

// 6. Sombras (neumorfismo o estándar)
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  } @else if $level == 2 {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  } @else if $level == 3 {
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  }
}

// 7. Animaciones básicas
@mixin fade-in($duration: 0.3s) {
  opacity: 0;
  animation: fadeIn $duration ease-in forwards;

  @keyframes fadeIn {
    to {
      opacity: 1;
    }
  }
}

// 8. Grid responsive
@mixin grid-repeat-auto($min-size, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-size, 1fr));
  gap: $gap;
}
